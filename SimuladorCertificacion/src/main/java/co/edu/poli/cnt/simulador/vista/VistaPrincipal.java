package co.edu.poli.cnt.simulador.vista;

import co.edu.poli.cnt.simulador.modelo.PreguntaEntity;
import co.edu.poli.cnt.simulador.repositorio.PreguntaRepositorioImpl;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Antonio Paternina <acpaternina@poli.edu.co>
 */
public class VistaPrincipal extends javax.swing.JFrame {

    private PanelBienvenida panelBienvenida;
    private PanelExamen panelExamen;
    private PanelResultado panelResultado;

    /**
     * Creates new form VistaPrincipal
     */
    public VistaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador OCPJP8");
        setPreferredSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // inicializar temprano la base de datos
        PreguntaRepositorioImpl.getInstancia();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaPrincipal vistaPrincipal = new VistaPrincipal();
                vistaPrincipal.mostrarPanelBienvenida();
                vistaPrincipal.setVisible(true);
            }
        });
    }

    /**
     * Muestra el panel de bienvenida en la aplicación
     */
    public void mostrarPanelBienvenida() {
        if (panelBienvenida == null) {
            panelBienvenida = new PanelBienvenida();
        }
        mostrarPanel(panelBienvenida);
    }

    /**
     * Muestra el panel del examen en la aplicación
     */
    public void mostrarPanelExamen() {
        eliminarPanel(panelBienvenida);
        if (panelExamen == null) {
            panelExamen = new PanelExamen();
        }
        mostrarPanel(panelExamen);
    }

    /**
     * Muestra el panel de resultado en la aplicación
     *
     * @param examen
     */
    public void mostrarPanelResultado(List<PreguntaEntity> examen) {
        eliminarPanel(panelExamen);
        if (panelResultado == null) {
            panelResultado = new PanelResultado();
            panelResultado.setExamen(examen);
            panelResultado.calificarExamen();
        }
        mostrarPanel(panelResultado);
    }

    /**
     * Utilidad que muestra un panel en este JFrame
     *
     * @param panel El panel que se desea mostrar
     */
    private void mostrarPanel(JPanel panel) {
        JFrame frame = this;
        frame.add(panel);
        frame.revalidate();
        frame.repaint();
    }

    /**
     * Utilidad que elimina un panel de este JFrame
     *
     * @param panel
     */
    private void eliminarPanel(JPanel panel) {
        JFrame frame = this;
        frame.remove(panel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
